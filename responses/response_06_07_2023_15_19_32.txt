import random
import simpy


class Teacher:
    def __init__(self, env, name, attention, motivation):
        self.env = env
        self.name = name
        self.attention = attention
        self.motivation = motivation

    def response_behavior(self):
        response_rate = self.attention / (self.attention + self.motivation)
        return response_rate


def teacher_activity(env, teacher):
    while True:
        yield env.timeout(2)  
        response_rate = teacher.response_behavior()
        if random.random() < response_rate:
            print(f"{teacher.name}: Received notification and responded.")
        else:
            print(f"{teacher.name}: Received notification and ignored.")


def run_simulation(num_teachers):
    env = simpy.Environment()
    for i in range(num_teachers):
        attention = random.uniform(0, 1)
        motivation = 1 - (i / num_teachers)
        teacher = Teacher(env, f"Teacher{i+1}", attention, motivation)
        env.process(teacher_activity(env, teacher))
    env.run(until=8)  # Simulate for 8 hours


if __name__ == "__main__":
    run_simulation(50)