import simpy
import random


class Status(Enum):
    IDLE = 0
    TEACHING = 1
    ON_A_BREAK = 2
    NOTIFIED = 3


class Teacher:
    def __init__(self, env, teaching_duration, break_duration, response_rate):
        self.env = env
        self.teaching_duration = teaching_duration
        self.break_duration = break_duration
        self.response_rate = response_rate
        self.status = Status.IDLE
        self.notification_count = 0
        self.response_count = 0
        self.process = env.process(self.run())

    def run(self):
        while True:
            if self.status == Status.IDLE:
                yield self.env.timeout(random.expovariate(1.0 / 2))
                self.status = Status.NOTIFIED
                self.notification_count += 1
                print("Teacher notified at time", self.env.now)

            elif self.status == Status.NOTIFIED:
                if random.random() < self.response_rate:
                    self.response_count += 1
                    print("Teacher responded at time", self.env.now)
                else:
                    print("Teacher ignored the notification at time", self.env.now)

                self.status = Status.TEACHING

                yield self.env.timeout(self.teaching_duration)

                self.status = Status.ON_A_BREAK
                yield self.env.timeout(self.break_duration)

                self.status = Status.IDLE


def simulate_teachers(env, num_teachers, teaching_duration, break_duration, response_rate):
    teachers = []
    for _ in range(num_teachers):
        teacher = Teacher(env, teaching_duration, break_duration, response_rate)
        teachers.append(teacher)
    env.run(until=24)

    total_notifications = sum(teacher.notification_count for teacher in teachers)
    total_responses = sum(teacher.response_count for teacher in teachers)
    response_rate = total_responses / total_notifications

    return response_rate


env = simpy.Environment()
num_teachers = 50
teaching_duration_hours = 3
teaching_duration_minutes = teaching_duration_hours * 60
break_duration_hours = 1
break_duration_minutes = break_duration_hours * 60
response_rate = 0.8

response_rate_avg = simulate_teachers(
    env, num_teachers, teaching_duration_minutes, break_duration_minutes, response_rate
)

print("Average Response Rate:", response_rate_avg)